from Crypto.Util.number import long_to_bytes
load("coppersmith.sage")

p  = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151
ct = 5437994412763609312287807471880072729673281757441094697938294966650919649177305854023158593494881613184278290778097252426658538133266876768217809554790925406

s = b'potluck{'
s = int(int.from_bytes(s) * 2**(14*8))

P.<x,y> = PolynomialRing(Zmod(p))
f = (s + x) + y - (s + x) * y * ct
bounds = [2^112, 2^176]
result = small_roots(f, bounds)
x, y = int(result[1][0]), int(result[1][1])

l = s + x
r = y

print(long_to_bytes(l) + long_to_bytes(r))
